#
# In the ARGoS window, you can move the camera with the following commands:
#
# - Translation: W A S D Q E keys, right-click + drag
# - Rotation: left-click + drag
#
# Selection: shift-click on the robot
# Remove selection: shift-click elsewhere
#
# Bug: selection is finnicky in the top-down view (Camera 1).
# Solution: switch to another camera and it'll work.
#

#
# Compiling and running the code
#
# - In the ARGoS window: Pause the simulation (if it's not paused already)
# - In the editor: do what you need, save, press the "Execute" button
# - In the ARGoS window: Press the "Play", "Step", or "Fast Forward" buttons
#

#
# This editor sucks.
#
# I know.
#
# But when it's open, it detects whether the open files have been modified elsewhere.
# So open this editor and then open the file you wanna edit in your favorite editor.
# When you save in your editor, the changes will be reflected here. Press Execute to compile and run.
# If you want syntax highlighting, JavaScript is pretty similar to Buzz.
#

function init() {
	reset()
}

# 600 steps till circle created with 10 tics/s
function step() {
	step_movement()

	close_neighbors = {}

	neighbors.foreach(
		function(rid, data) {
			if ((data.azimuth > -azim_range*((math.pi)/180)) and (data.azimuth < azim_range*((math.pi)/180)) and (data.distance < dist_range))
				close_neighbors[rid] = data
			else if ((data.azimuth < (-180 + azim_range)*((math.pi)/180)) and (data.azimuth > (180 - azim_range)*((math.pi)/180)) and (data.distance < dist_range))
				close_neighbors[rid] = data
		}
	)

	log(id, ": ",close_neighbors)
}

function step_movement() {
	if (proximity[0].value > 0.0){
		S = 1
	}
	else {
		S = 0
	}
	
	if ((id == 2) and (step_counter > 600)){
		set_wheels(3.0, 9.0)
	}
	else {
		if (S == 1) {
			#set_leds(0,0,255)
			set_wheels(3.0,9.0)
		}
		else {
			#set_leds(0, 255, 0)
			set_wheels(9.0,1.0)
		}
	}

	step_counter = step_counter + 1

	if ((proximity[0].value > 0.0) and (proximity[4].value > 0.0)){
		set_leds(0, 255, 0)
	} else if ((proximity[0].value > 0.0) or (proximity[4].value > 0.0)){
		set_leds(0, 0, 255)
	} else{
		set_leds(255, 0, 0)
	}
}

function reset() {
	math.rng.setseed(id)
	S = 0
	step_counter = 0

	azim_range = 10
	dist_range = 40

#	if (id == 2) {
#		set_leds(0,255,0)
#	}
}

function destroy() {
}
